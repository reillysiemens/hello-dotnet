name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        type: string
      prerelease:
        description: 'Prerelease'
        required: true
        default: true
        type: boolean

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        runtime: [linux-x64, osx-x64, osx-arm64, win-x64]
        include:
          - runtime: linux-x64
            os: ubuntu-latest
          - runtime: osx-x64
            os: macos-latest
          - runtime: osx-arm64
            os: macos-latest
          - runtime: win-x64
            os: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Install dependencies
      run: dotnet restore --runtime ${{ matrix.runtime }}
    - name: Test
      run: dotnet test --no-restore --configuration release
    - name: Build artifacts
      run: dotnet publish src/HelloWorld/HelloWorld.csproj --configuration release --self-contained true --runtime ${{ matrix.runtime }} --output dist/${{ matrix.runtime }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-${{ matrix.runtime }}
        path: dist/${{ matrix.runtime }}

  package:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    - name: Install Zip
      run: sudo apt install -y zip
    - name: Create win-x64 archive
      run: |
        cd helloworld-${{ github.event.inputs.version }}-win-x64
        zip ../helloworld-${{ github.event.inputs.version }}-win-x64.zip *
    - name: Upload win-x64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-win-x64.zip
        path: helloworld-${{ github.event.inputs.version }}-win-x64.zip
    - name: Create osx-x64 archive
      run: |
        cd helloworld-${{ github.event.inputs.version }}-osx-x64
        tar -czf ../helloworld-${{ github.event.inputs.version }}-osx-x64.tar.gz *
    - name: Upload osx-x64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-osx-x64.tar.gz
        path: helloworld-${{ github.event.inputs.version }}-osx-x64.tar.gz
    - name: Create osx-arm64 archive
      run: |
        cd helloworld-${{ github.event.inputs.version }}-osx-arm64
        tar -czf ../helloworld-${{ github.event.inputs.version }}-osx-arm64.tar.gz *
    - name: Upload osx-arm64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-osx-arm64.tar.gz
        path: helloworld-${{ github.event.inputs.version }}-osx-arm64.tar.gz
    - name: Create linux-x64 archive
      run: |
        cd helloworld-${{ github.event.inputs.version }}-linux-x64
        tar -czf ../helloworld-${{ github.event.inputs.version }}-linux-x64.tar.gz *
    - name: Upload linux-x64 artifact
      uses: actions/upload-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-linux-x64.tar.gz
        path: helloworld-${{ github.event.inputs.version }}-linux-x64.tar.gz
    
  release:
    runs-on: ubuntu-latest
    needs: [package]
    environment:
      name: production
    permissions:
      contents: write
    steps:
    - name: Download win-x64 artifact
      uses: actions/download-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-win-x64.zip
    - name: Download osx-x64 artifact
      uses: actions/download-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-osx-x64.tar.gz
    - name: Download osx-arm64 artifact
      uses: actions/download-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-osx-arm64.tar.gz
    - name: Download linux-x64 artifact
      uses: actions/download-artifact@v3
      with:
        name: helloworld-${{ github.event.inputs.version }}-linux-x64.tar.gz
    - name: Directory debugging
      run: |
        pwd
        ls -lR
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ github.event.inputs.version }}
        body: "Release ${{ github.event.inputs.version }}."
        tag_name: ${{ github.event.inputs.version }}
        prerelease: ${{ github.event.inputs.prerelease }}
        files: |
          helloworld-${{ github.event.inputs.version }}-win-x64.zip
          helloworld-${{ github.event.inputs.version }}-osx-x64.tar.gz
          helloworld-${{ github.event.inputs.version }}-osx-arm64.tar.gz
          helloworld-${{ github.event.inputs.version }}-linux-x64.tar.gz